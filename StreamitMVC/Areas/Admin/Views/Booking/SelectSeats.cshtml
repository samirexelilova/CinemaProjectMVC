@model SelectSeatsVM


<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="#">Ana Səhifə</a></li>
                    <li class="breadcrumb-item"><a href="#">@Model.Movie?.Name</a></li>
                    <li class="breadcrumb-item active">Oturacaq Seçimi</li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12 text-center">
            <h3>@Model.Movie?.Name</h3>
            <p class="text-muted">
                <i class="fas fa-calendar"></i> @Model.Session?.StartTime.ToString("dd.MM.yyyy HH:mm") -
                <i class="fas fa-building"></i> @Model.Session?.Cinema?.Name -
                <i class="fas fa-couch"></i> @Model.HallName
            </p>
        </div>
    </div>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="screen-container">
        <div class="screen">EKRAN</div>
    </div>

    <form method="post" asp-action="ConfirmSeats" id="seatForm">
        <input type="hidden" name="SessionId" value="@Model.SessionId" />

        <div class="seating-plan">
            @for (int row = Model.Rows; row >= 1; row--)
            {
                <div class="row-seats">
                    <div class="row-number">@row</div>
                    @for (int col = 1; col <= Model.SeatsPerRow; col++)
                    {
                        var seat = Model.Seats.FirstOrDefault(s => s.Row == row && s.Number == col);
                        if (seat != null)
                        {
                            bool isTaken = seat.IsTaken;
                            string seatClass = "seat";
                            if (isTaken)
                            {
                                seatClass += " occupied";
                            }
                            else if (seat.Type == "VIP")
                            {
                                seatClass += " vip";
                            }

                            <label class="@seatClass" title="Sıra: @seat.Row, Yer: @seat.Number (@seat.Type)">
                                @if (!isTaken)
                                {
                                    <input type="checkbox" name="SelectedSeatIds" value="@seat.Id"
                                           onchange="updateSelectedSeats()" />
                                }
                                <span>@seat.Row-@seat.Number</span>
                            </label>
                        }
                        else
                        {
                            <div class="seat empty"></div>
                        }
                    }
                </div>
            }
        </div>

        <div class="legend">
            <div><span class="legend-item empty"></span> Boş yer (oturacaq yoxdur)</div>
            <div><span class="legend-item available"></span> Boş (seçilə bilən)</div>
            <div><span class="legend-item vip"></span> VIP</div>
            <div><span class="legend-item occupied"></span> Dolu</div>
            <div><span class="legend-item selected"></span> Seçilmiş</div>
        </div>

        <div class="selection-info" id="selectionInfo" style="display: none;">
            <div class="card">
                <div class="card-body text-center">
                    <h5>Seçilmiş Oturacaqlar</h5>
                    <p id="selectedSeatsText">Heç bir oturacaq seçilməyib</p>
                    <p id="totalPriceText">Ümumi: 0.00 AZN</p>
                </div>
            </div>
        </div>

        <div class="text-center mt-4">
            <button type="submit" class="btn btn-success btn-lg" id="confirmBtn" >
                <i  class="fas fa-shopping-cart"></i> Səbətə Əlavə Et
            </button>
            <a asp-action="Index" asp-controller="Home" class="btn btn-secondary btn-lg ml-2">
                <i class="fas fa-arrow-left"></i> Geri
            </a>
        </div>
    </form>
</div>

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: #f8f9fa;
    }

    .screen-container {
        text-align: center;
        margin-bottom: 40px;
    }

    .screen {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        height: 50px;
        width: 60%;
        margin: 0 auto;
        border-radius: 25px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 16px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        position: relative;
    }

        .screen::before {
            content: '';
            position: absolute;
            top: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 70%;
            height: 2px;
            background: #ccc;
            border-radius: 1px;
        }

    .seating-plan {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 8px;
        margin-bottom: 30px;
        background: white;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    }

    .row-seats {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .row-number {
        width: 35px;
        text-align: center;
        font-weight: bold;
        color: #666;
        font-size: 14px;
    }

    .seat {
        width: 35px;
        height: 35px;
        margin: 2px;
        background: #f8f9fa;
        border: 2px solid #28a745;
        border-radius: 8px;
        cursor: pointer;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 9px;
        color: #333;
        user-select: none;
        transition: all 0.3s ease;
    }

        .seat:hover:not(.occupied) {
            transform: scale(1.1);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

        .seat span {
            pointer-events: none;
            font-weight: 600;
        }

        .seat input[type="checkbox"] {
            position: absolute;
            opacity: 0;
            cursor: pointer;
            width: 100%;
            height: 100%;
            margin: 0;
            top: 0;
            left: 0;
        }

            .seat input[type="checkbox"]:checked + span {
                background: #ffc107;
                color: #333;
                border-radius: 6px;
                display: block;
                width: 100%;
                height: 100%;
                text-align: center;
                line-height: 31px;
                font-weight: 700;
            }

            .seat input[type="checkbox"]:checked {
                background: #ffc107;
            }

        .seat.occupied {
            background: #6c757d;
            border-color: #6c757d;
            pointer-events: none;
            cursor: not-allowed;
            color: white;
        }

        .seat.vip {
            background: #ffd700;
            border-color: #ffb700;
            color: #333;
        }

            .seat.vip input[type="checkbox"]:checked + span {
                background: #ff6b35;
                color: white;
            }

        .seat.empty {
            background: transparent;
            border: none;
            cursor: default;
            pointer-events: none;
        }

    .legend {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        margin: 30px 0;
        gap: 20px;
        font-size: 14px;
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

        .legend div {
            display: flex;
            align-items: center;
            gap: 8px;
        }

    .legend-item {
        width: 25px;
        height: 25px;
        display: inline-block;
        border-radius: 6px;
        border: 2px solid #28a745;
    }

        .legend-item.empty {
            background: transparent;
            border: none;
        }

        .legend-item.available {
            background: #f8f9fa;
            border: 2px solid #28a745;
        }

        .legend-item.vip {
            background: #ffd700;
            border: 2px solid #ffb700;
        }

        .legend-item.occupied {
            background: #6c757d;
            border: 2px solid #6c757d;
        }

        .legend-item.selected {
            background: #ffc107;
            border: 2px solid #ffc107;
        }

    .selection-info {
        margin: 20px 0;
    }

        .selection-info .card {
            border: none;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

    #confirmBtn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }

    @@media (max-width: 768px) {
        .seat

    {
        width: 28px;
        height: 28px;
        font-size: 8px;
    }

    .row-number {
        width: 25px;
        font-size: 12px;
    }

    .legend {
        flex-direction: column;
        align-items: center;
    }

    }
</style>

<script>
    function updateSelectedSeats() {
        const checkboxes = document.querySelectorAll('input[name="SelectedSeatIds"]:checked');
        const selectedSeatsText = document.getElementById('selectedSeatsText');
        const totalPriceText = document.getElementById('totalPriceText');
        const selectionInfo = document.getElementById('selectionInfo');
        const confirmBtn = document.getElementById('confirmBtn');

        const seatPrice = @Model.Session?.HallPrice?.Price ?? 8.00m;

        if (checkboxes.length > 0) {
            const seatNumbers = Array.from(checkboxes).map(cb => {
                const label = cb.closest('label');
                const span = label.querySelector('span');
                return span.textContent;
            });

            selectedSeatsText.textContent = seatNumbers.join(', ');
            totalPriceText.textContent = `Ümumi: ${(checkboxes.length * seatPrice).toFixed(2)} AZN`;
            selectionInfo.style.display = 'block';
            confirmBtn.disabled = false;
        } else {
            selectedSeatsText.textContent = 'Heç bir oturacaq seçilməyib';
            totalPriceText.textContent = 'Ümumi: 0.00 AZN';
            selectionInfo.style.display = 'none';
            confirmBtn.disabled = true;
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        updateSelectedSeats();
    });
</script>